.app-container {
  text-align: center;
  font-family: Arial, sans-serif;
  background-color: #f0f0f0;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.pokemon-card{
  padding: 20px;
  display: grid;
  grid-template-columns: auto auto auto auto;
  gap: 10px;
  background: linear-gradient(rgb(255, 113, 42), rgb(255, 204, 50));
  border-radius: 10px;
  width: 80rem;
  height: 60rem;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  text-align: center;
  font-style: oblique;
  font-weight: 900;

}
.pokemon-card > div {
 text-align: center;
 font-size: 30px;
 background-color: white;
}

.item1{
  grid-row-start: 1;
  grid-row-end: 2;
  grid-column-start: 1;
  grid-column-end: 2;

}
.item2{
  grid-row-start: 2;
  grid-row-end: 4;

}
.item3{
  grid-row-start: 1;
  grid-row-end: 4;
  grid-column-start: 2;
  grid-column-end: 5;
}
.start-button {
  padding: 20px 40px;
  font-size: 24px;
  background-color: #4CAF50;
  color: white;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}
.character-select{
  display: flex;
  flex-direction: column;

}

.mainChoices{
  padding: 15px 60px;
  cursor: pointer;
  margin:0px 0px 5px 10px;
  background: transparent;
  font-size: 30px;
  border:none;
  font-family: "Rowdies", serif;
  font-weight: 400;
  font-style: normal;
}
.mainChoices:hover{
  font-size: 35px;
  font-weight: 800;
  font-style: italic;
  
}
.start-button:hover {
  background-color: #45a049;
}

.card-container {
  display: grid;
  grid-template-columns: repeat(5, 1fr); /* 10 columns */
  grid-template-rows: repeat(2, auto); /* 2 rows */
  gap: 20px;
  padding: 20px;
}
.reset{
  padding: 20px;
  width: 150px;
  background-color: yellow;
}

.card {
  padding: 20px;
  background: linear-gradient(rgb(255, 113, 42), rgb(255, 204, 50));
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  text-align: center;
  font-style: oblique;
  font-weight: 900;
  position: relative;
  
}
.card:hover{
  transform: scale(1.1);
  background: linear-gradient(rgb(255, 113, 42), rgb(255, 191, 0));
}
.card.selected-pokemon {
  transform: scale(2);
  z-index: 10;
  
}
.card img {
  width: 100px;
  height: 100px;
  object-fit: cover;
}

.fight-screen{
  display: grid;
}
.nextAndPrevious {
  padding:10px 10px;
  width: 150px;
  border-color: #FFD700; /* Replace $yellow with the color value */
  color: #0c0b0b;
  font-size: 20px;
  background-image: linear-gradient(45deg, #FFD700 50%, transparent 50%);
  background-position: 100%;
  background-size: 400%;
  transition: background 300ms ease-in-out;
  border-radius: 15px;
}

.nextAndPrevious:hover {
  background-position: 0;
}


.loading-screen {
  display: flex;
  flex-direction: column; /* Stack the text and spinner vertically */
  justify-content: center; /* Center content vertically */
  align-items: center; /* Center content horizontally */
  height: 100vh; /* Make sure it takes the full viewport height */
  text-align: center;
  font-size: 20px;
}

.spinner {
  width: 70px;
  height: 70px;
  margin-top: 20px; /* Add space between the text and spinner */
  --clr: rgb(0, 0, 0);
  --clr-alpha: rgb(0, 0, 0, 0);
  animation: spinner 3s infinite ease;
  transform-style: preserve-3d;
}

.spinner > div {
  background-color: var(--clr-alpha);
  height: 100%;
  position: absolute;
  width: 100%;
  border: 3.5px solid var(--clr);
}

.spinner div:nth-of-type(1) {
  transform: translateZ(-35.26px) rotateY(180deg);
}

.spinner div:nth-of-type(2) {
  transform: rotateY(-270deg) translateX(50%);
  transform-origin: top right;
}

.spinner div:nth-of-type(3) {
  transform: rotateY(270deg) translateX(-50%);
  transform-origin: center left;
}

.spinner div:nth-of-type(4) {
  transform: rotateX(90deg) translateY(-50%);
  transform-origin: top center;
}

.spinner div:nth-of-type(5) {
  transform: rotateX(-90deg) translateY(50%);
  transform-origin: bottom center;
}

.spinner div:nth-of-type(6) {
  transform: translateZ(35.26px);
}

@keyframes spinner {
  0% {
    transform: rotate(0deg) rotateX(-55deg) rotateY(46.5deg);
  }

  100% {
    transform: rotate(0deg) rotateX(-415deg) rotateY(406.5deg);
  }
}
