.app-container {
  text-align: center;
  font-family: Arial, sans-serif;
  background-color: #f0f0f0;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.pokemon-card > div {
  font-size: 30px;

 }
 .pokemon-card {
  padding: 10px;
  display: grid;
  grid-template-columns: 1fr 2fr; /* Two columns: left for item1 and item2, right for item3 */
  grid-template-rows: auto minmax(200px, 1fr) minmax(200px, 1fr); /* Adjust rows to fit content */
  gap: 10px; /* Reduce gap size */
  color: white;
  background: linear-gradient(rgb(255, 113, 42), rgb(255, 204, 50));
  border-radius: 10px;
  width: 80rem; /* Keep width */
  height: auto; /* Let height adjust dynamically */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  text-align: center;
  font-style: oblique;
  font-weight: 900;
}

.header {
  grid-column: 1 / span 2; /* Span the entire width */
  grid-row: 1; /* Place in the first row */
  font-size: 48px;
  height: 130px; /* Allow height to adjust */
  font-weight: bolder;
}

.item1 {
  grid-column: 1; /* Place in the first column */
  grid-row: 2; /* Place in the second row */
  width: auto; /* Responsive width */
  height: auto; /* Dynamic height based on content */
  background-size: cover;
  background-position: center;
  min-height: 300px; /* Set a minimum height to prevent shrinkage */
}

.item2 {
  grid-column: 1; /* Place in the first column */
  grid-row: 3; /* Place in the third row */
  height: 450px;
  text-align: left;
  gap: 5px; /* Reduce gap size */
  width: 600px; /* Responsive width */
}

.item2 p {
  font-size: 18px; /* Slightly smaller text */
}

.item3 {
  grid-column: 2; /* Place in the second column */
  grid-row: 2 / span 2; /* Span the second and third rows */
  text-align: center;
  display: flex;
  flex-direction: column;
  
  justify-content: flex-start; /* Align items at the top */
  align-items: center;
  padding: 20px;
  overflow-y: auto; /* Add scrolling if the content overflows */
  border-radius: 10px;
  max-height: 100%; /* Allow it to adjust dynamically */
}

.item3 ul {
  list-style: none;
  padding: 0;
  margin: 20px 0;
  text-align: left;
  width: 100%;
}
ul{
  list-style: none;
}
.item3 li {
  margin: 5px 0; /* Reduce space between abilities */
  font-size: 18px;
  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}





.start-button {
  padding: 20px 40px;
  font-size: 24px;
  background-color: #4CAF50;
  color: white;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}
.character-select{
  display: flex;
  flex-direction: column;

}

.mainChoices{
  padding: 15px 60px;
  cursor: pointer;
  margin:0px 0px 5px 10px;
  background: transparent;
  font-size: 30px;
  border:none;
  font-family: "Rowdies", serif;
  font-weight: 400;
  font-style: normal;
}
.mainChoices:hover{
  font-size: 35px;
  font-weight: 800;
  font-style: italic;
  
}
.start-button:hover {
  background-color: #45a049;
}

.card-container {
  display: grid;
  grid-template-columns: repeat(5, 1fr); /* 10 columns */
  grid-template-rows: repeat(2, auto); /* 2 rows */
  gap: 20px;
  padding: 20px;
}
.reset{
  padding: 20px;
  width: 150px;
  background-color: yellow;
}

.card {
  padding: 20px;
  background: linear-gradient(rgb(255, 113, 42), rgb(255, 204, 50));
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  text-align: center;
  font-style: oblique;
  font-weight: 900;
  position: relative;
  
}

.nextAndPrevious {
  padding: 10px 20px;
  margin: 0 10px;
  background-color: #000000;
  border: 1px solid #ccc;
  cursor: pointer;
  transition: background-color 0.3s;
  color:white;
}

.nextAndPrevious:hover {
  background-color: #ffd83d;
}
.card:hover{
  transform: scale(1.1);
  background: linear-gradient(rgb(255, 113, 42), rgb(255, 191, 0));
}
.card.selected-pokemon {
  transform: scale(2);
  z-index: 10;
  
}
.card img {
  width: 100px;
  height: 100px;
  object-fit: cover;
}

.fight-screen{
  display: grid;
}



.loading-screen {
  display: flex;
  flex-direction: column; /* Stack the text and spinner vertically */
  justify-content: center; /* Center content vertically */
  align-items: center; /* Center content horizontally */
  height: 100vh; /* Make sure it takes the full viewport height */
  text-align: center;
  font-size: 20px;
}

.spinner {
  width: 70px;
  height: 70px;
  margin-top: 20px; /* Add space between the text and spinner */
  --clr: rgb(0, 0, 0);
  --clr-alpha: rgb(0, 0, 0, 0);
  animation: spinner 3s infinite ease;
  transform-style: preserve-3d;
}

.spinner > div {
  background-color: var(--clr-alpha);
  height: 100%;
  position: absolute;
  width: 100%;
  border: 3.5px solid var(--clr);
}

.spinner div:nth-of-type(1) {
  transform: translateZ(-35.26px) rotateY(180deg);
}

.spinner div:nth-of-type(2) {
  transform: rotateY(-270deg) translateX(50%);
  transform-origin: top right;
}

.spinner div:nth-of-type(3) {
  transform: rotateY(270deg) translateX(-50%);
  transform-origin: center left;
}

.spinner div:nth-of-type(4) {
  transform: rotateX(90deg) translateY(-50%);
  transform-origin: top center;
}

.spinner div:nth-of-type(5) {
  transform: rotateX(-90deg) translateY(50%);
  transform-origin: bottom center;
}

.spinner div:nth-of-type(6) {
  transform: translateZ(35.26px);
}

@keyframes spinner {
  0% {
    transform: rotate(0deg) rotateX(-55deg) rotateY(46.5deg);
  }

  100% {
    transform: rotate(0deg) rotateX(-415deg) rotateY(406.5deg);
  }
}
